LEFT
  A minimalist text editor
    % content/tools/left/main.png
    & {Left(https://hundredrabbits.itch.io/Left)} is a distractionless writing tool with auto-complete, synonyms, writing statistics, markup navigation and a speed-reader.
    & The application is {*free*} (donations welcome) and {*Open Source*}, its original purpose was to help {Rekka(https://kokorobot.ca)} with the writing of the upcoming novel {Wiktopher(https://wiktopher.kokorobot.ca)}.
  Download
    % itchio 173127
  Trailer
    % youtube QloUoqqhXGE
  Tutorial
    & Launch the app. You'll see a <b>main window</b>, as well as a <b>sidebar</b> on the left. You'll be writing in the main window, the sidebar will list all of the <b>markers</b> and <b>separate files</b> that you create. 
    & The app opens with a <b>splash</b>, listing a guide as well as a list of shortcuts. At the bottom left of the main window, there are numbers followed by letters: 
    - L stands for lines
    - W for words
    - V for vocabulary
    - C for character. 
    & As you write, these numbers will increase and you'll know exactly how many lines, words, characters and unique words there are in your text. These stats are followed by a <b>percentage</b> to show you where you are in the text, with 0% indicating the beginning, and 100% the end - this is useful when writing large texts.
  Creating a new file
    & Create a new file with <b>⌘ n</b> (most of the shorts using 'command' combined with a letter or other character). 
    & The main window will now be empty. If you look on the sidebar you will see the <b>splash</b> listed, you can return to it by selecting it or by using <b>⌘ ]</b> and <b>⌘ [</b>. 
    & The file you created, by default is named 'untitled', you can rename it by saving the file using <b>⌘ n</b>.
  Importing an existing file
    & Open a text file by dragging it over Left, or using the shortcut <b>⌘ o</b>. You can close a file, by pressing <b>⌘ w</b>.
  Writing
    & To better organize your text, you can create markers by beginning lines with:
    & <b>#</b> or <b>##</b>
    & Using these will list them on the sidebar in different ways. 
    - <b>#</b> will create a main header.
    - <b>##</b> will create a sub-header.
    & The markers will be listed under your document name on the side bar, and whichever other document that you create will be listed underneath everything.
    & Once you have more than one marker, you can cycle through them using <b>⌘ ]</b>. 
  Features
    & Left has many built-in features to help you write more efficiently, these include:
    - A synonyms dictionary
    - Auto-complete of words
    - A speed reader
    - A quick insert mode
    & <b>Synonyms</b> - The synonyms of every word, appear on the bottom of the main window, you can cycle through the synonyms of a selected word by keeping <b>shift</b> pressed down, and then pressing <b>tab</b> to cycle through them. When you release the keys, the word will be replaced with the selected word. You can undo this change with <b>⌘ z</b>. 
    & <b>Autocomplete</b> - You can press <b>tab</b> to auto-complete a previously used, or common, word.
    & <b>Speed reader</b> - to use it highlight some text and press <b>⌘ k</b> to enable it. Press <b>escape</b> to stop it.
    & <b>Quick insert mode</b> - This mode enables you to quickly insert bits of data into your text, to go into this mode, press <b>⌘ i</b>. A list of shortcuts will appear at the bottom of the main window : Date, Time, Header, Comment and Exit. 
    - Date - You can insert the current date into your text, by pressing the shortcut <b>⌘ d</b>
    - Time - Insert the current time into your text by pressing the shortcut <b>⌘ t</b>
    - Header - Create a header by pressing <b>⌘ h</b>.
    - Comment - Create a comment by pressing <b>⌘ /</b>.
    & You can leave insert mode by pressing the escape key.
  Visual
    % content/tools/left/left.2.png
    & You can change the look and colour of Left. To do this, {download(https://hundredrabbits.itch.io/left)} themes from our itch.io page. You can view the colour palettes of each theme in the preview, once you find something you like, <b>drag the file</b> (.svg file) onto Left. The colours will change instantly. 
    & These themes are part of the <b>Ecosystem Theme</b>, which means that you can apply a theme to any supported app (Dotgrid, Donsol, Pico and Marabu).
    & You can also {create(https://github.com/hundredrabbits/Themes#collection)} your own themes.
    & You can cycle between 3 fonts, using <b>⌘ <</b> or <b>⌘ ></b>. The font size can also be increased and decreased using <b>⌘ -</b> and <b>⌘ +</b>. 

  Shortcut quick list
    - Create markers by beginning lines with <b>#</b> or <b>##</b>
    - Navigate quickly between markers with <b>⌘ ]</b> and <b>⌘ [</b>
    - Open a text file by dragging it, or with <b>⌘ o</b>
    - Highlight some text and press <b>⌘ k</b> to enable the speed reader
    - Press <b>tab</b> to auto-complete a previously used, or common, word
    - Press <b>shift tab</b> to scroll through the selected word's synonyms
    - <b>⌘ i</b> Quick insert mode
    - <b>⌘ d</b> Date
    - <b>⌘ t</b> Time
    - <b>⌘ p</b> Path
    - <b>⌘ h</b> Header
    - <b>⌘ H</b> Sub-Header
    - <b>⌘ /</b> Comment
    - <b>⌘ l</b> Line
    - Cycle between font styles using <b>⌘ <</b> and <b>⌘ ></b>
    - Decrease font using <b>⌘ -</b>
    - Increase font using <b>⌘ +</b>
    & This application supports the {Ecosystem Theme(https://github.com/hundredrabbits/Themes)}. See the {License(https://github.com/hundredrabbits/Left/blob/master/LICENSE.md)} file for license rights and limitations (MIT). {Pull Requests(https://github.com/hundredrabbits/Left)} are welcome!

DOTGRID
  Introduction
    % content/tools/dotgrid/main.jpg
    & Dotgrid is a distractionless vector tool with line styles, corner controls, colours, grid-based tools, PNG and SVG export. Dotgrid supports the full SVG specs, and includes additional effects such as mirroring and radial drawing.
    & The application is {*free & Open Source*}, and available online to be used within your browser, on your Raspberry Pi, or on your mobile device. 
  Download
    % itchio 190851
  Trailer
    % youtube Xt1zYHhpypk
  Tutorial
    & Upon opening the application, you are presented with a dotted grid, which can be made bigger, or smaller, by resizing the window. A list of tools, represented as icons, sits on the bottom of the window.
    & Clicking anywhere on the grid will add a white dot to the grid, and by adding additional dots to the grid, notice how the available tool icons become lighter, that means you have enough points to use them, their icon will darken again when you don't.
  Line(A)
    & Add two points on the grid. Selecting <b>Line</b>(the diagonal line icon) will link the two points together with a straight white line. 
    % content/tools/dotgrid/dotgrid.line.jpg auto
  Arc(S) & Reverse-Arc(D)
    & Press backspace to clear your last segment, and draw another two sets of points, but this time, click on <b>Arc</b>. This, will connect your two points with a curve. 
    & If you undo your last move with <b>⌘ z</b>, connect your two points again by pressing <b>Arc Reverse</b>(the inverse curve icon). This creates an inverted curve.
    % content/tools/dotgrid/dotgrid.arc.jpg auto
  Bezier(F)
    & Place two dots on your grid, with a third between them but offset, then press <b>Bezier</b>(the S icon). A white dot will appear separate from the main line, this is a handle that you can use to create your curve. Move the handle (or third point) to change its shape. 
    % content/tools/dotgrid/dotgrid.bezier.jpg auto
  Close(Z)
    & Create 3 points on the grid, press <b>Line</b>, then press <b>Close</b> (the flat oval icon), your shape will complete itself. If you don't close a shape, you won't be able to fill it, and it will create problems when using Line cap. 
    % content/tools/dotgrid/dotgrid.close.jpg auto
  Line cap(Q)
    & Make a triangle on the grid using 3 points, select the <b>Line</b> to connect them, then, select <b>Linecap</b> (line with a diamond shape at the end). By default, you get a 'round' line cap, you can cycle through the different types by pressing the linecap icon again. You have 3 linecap styles to choose from:
    - <b>Round</b> A rounded end cap is added to the end of the line
    - <b>Butt</b> A flat edge is added to the end of the line
    - <b>Square</b> A square end is added to the end of the line
  Line join(W)
    & Add 3 points to the grid to make a triangle, <b>Close</b> the shape and then select <b>Line Join</b> (the icon with two 'hockey sticks' meeting each other). 
    & <b>Line Join</b> changes the look of the corners of your closed shapes, like <b>Line Cap</b>, you can choose from the 3 styles: Round, butt and square. You can cycle between the 3 by pressing on the icon repeatedly. The shortcut to use it is:
  Line thickness
    & You can increase or decrease the thickness of your line anytime, using <b>Line Thickness</b> (the line with rectangle over it). The shortcuts to alter the line thickness are:
    - Thicker <b>}</b>
    - Thinner <b>{</b>
    - Thicker +5 <b>]</b>
    - Thinner -5 <b>[</b>
  Mirror(E)
    & Drawing a shape, and select <b>Mirror</b> (the icon with 4 lines that aren't crossing), will mirror the image horizontally on the canvas. Pressing on it again, will mirror it vertically, doing it again, mirrors it 180 degrees from the center.
    & You can tell which sort of mirroring you've got, by seeing the changes in the icon on the menu. To remove the effect, click on the icon until it returns to its original state, with the lines not crossing.
  Fill(R)
    & Drawing a closed shape, and selecting <b>Fill</b> (icon resembling a twisted rectangle) will fill it with a single colour. Pressing on the icon again, will remove the fill. Know that if you have other closed shapes on your canvas, this function will fill them all. The shortcut to use it is:
    % content/tools/dotgrid/dotgrid.fill.jpg auto
  Color
    & You can change the colour of any shape, by clicking on the white circle on the lower right-hand side and entering a colour code(a hex, like FF0000). 
    % content/tools/dotgrid/dotgrid.color.jpg auto
  Other Functions
    & <b>Move points</b> - You can move any point, any time, by selecting it with your cursor and moving it around. If you choose to move a point that is part of an existing shape, it will warp the shape.
    & <b>Grid on/off</b> - You can toggle the grid, on and off, to better view a design using the shortcut <b>H</b>.
    & <b>Layers</b> - You can toggle between each layer by using the shortcuts:
    - <b>⌘ 1</b> for Layer 1
    - <b>⌘ 2</b> for Layer 2
    - <b>⌘ 3</b> for Layer 3
    & Dots will appear over the shapes of the layer that is selected. Having multple layers, enables you to have designs of varying colour and complexity.
  Drawing complex shapes
    & To create a circle, draw 5 points on the grid, with the 5th returning to the starting point, then press <b>Arc</b>. You will now have a circle. Select <b>Close</b> to close the shape. The roundness of your circle will depend on where you placed your points. You can always adjust, by selecting the points individually and moving them around. 
    & When making complex shapes, mind how you build your shapes and how the lines will connect, the order will affect your design. 
  Visual
    % content/tools/dotgrid/dotgrid.second.jpg
    & You can change the look and colour of Dotgrid. To do this, {download(https://hundredrabbits.itch.io/dotgrid)} themes from our itch.io page. You can view the colour palettes of each theme in the preview, once you find something you like, <b>drag the file</b> (.svg file) onto Dotgrid. The colours will change instantly. 
    & These themes are part of the <b>Ecosystem Theme</b>, which means that you can apply a theme to any supported app (Left, Donsol, Pico and Marabu).
    & You can also {create(https://github.com/hundredrabbits/Themes#collection)} your own themes.
  Shortcut Quick List
    & Stroke types
    - Line <b>A</b>
    - Arc <b>S</b>
    - Arc Rev <b>D</b>
    - Bezier <b>F</b>
    - Close <b>Z</b>
    & Stroke effects
    - Line cap <b>Q</b>
    - Line join <b>W</b>
    - Mirror <b>E</b>
    - Fill <b>R</b>
    - Thicker <b>}</b>
    - Thinner <b>{</b>
    - Thicker +5 <b>]</b>
    - Thinner -5 <b>[</b>
    & Dotgrid can be operated with the keyboard
    - Add point <b>enter key</b>
    - Move up <b>up arrow key</b>
    - Move down <b>down arrow key</b>
    - Move right <b>right arrow ley</b>
    - Move left <b>left arrow key</b>
    - Remove point <b>backspace</b>
    - Remove segment <b>backspace</b>
    & Toggling between layers
    - Foreground <b>⌘ 1</b> 
    - Middle <b>⌘ 2</b> 
    - Background <b>⌘ 3</b> 
    & Other
    - Color picker <b>G</b>
    - Toggle grid on/off <b>H</b>
    - Save <b>⌘ s</b>
    - Export <b>⌘ e</b>
    - Render <b>⌘ r</b>
    & This application supports the {Ecosystem Theme(https://github.com/hundredrabbits/Themes)}. See the {License(https://github.com/hundredrabbits/Dotgrid/blob/master/LICENSE.md)} file for license rights and limitations (MIT). {Pull Requests(https://github.com/hundredrabbits/Dotgrid)} are welcome!

ORCA
  Introduction
    % content/tools/orca/orca.4.jpg
    & {*ORCA*} is an open-source visual programming language, designed to create procedural sequencers on the fly, and control other applications.
    & ORCA is not a synthesizer, but a livecoding environment to write generative tools able to send MIDI, OSC or UDP data to DAWs (like Ableton, Renoise, VCV Rack, etc.), or an audio server such as SuperCollider. You can also use {*Pilot(https://github.com/hundredrabbits/Pilot)*}, a companion application to ORCA. 
  Download
    & You can view the {sources(https://github.com/hundredrabbits/Orca)}, or {download builds(http://hundredrabbits.itch.io/Orca)} for OSX, Windows and Linux here: 
    % itchio 225814
  Tutorial
    & Each letter of the alphabet is an operation, lowercase letters operate on bang, uppercase letters operate each frame.
    & To learn more:
    - Look at projects created with #{ORCΛ(https://twitter.com/hashtag/ORCΛ)}
    - Watch the {*introduction video(https://www.youtube.com/watch?v=RaI_TuISSJE)*}
    - Check out {*examples(https://github.com/hundredrabbits/Orca/tree/master/examples)*}
    - Follow the {*tutorials(https://github.com/hundredrabbits/Orca/blob/master/TUTORIAL.md)*} 
    & If you need some help:
    - Visit the {*forum(https://llllllll.co/t/orca-live-coding-tool/17689)*}
    - Go to the {*chatroom(https://talk.lurk.org/channel/orca)*}
    & If you're looking for a portable distribution, visit <b>{Orca-c(http://github.com/hundredrabbits/Orca-c)}</b>. If you're looking for the library for your {*Monome Norns(https://monome.org/norns/)*}, visit {*Orca Norns(https://github.com/itsyourbedtime/orca/)*}.
    & {*Watch a short video(https://twitter.com/neauoire/status/1129920308088066048)*} of Devine performing with ORCA at Algomech 2019.
    % content/tools/orca/orca.3.jpg
  Workshops
    & If you want to organize an {*ORCΛ workshop*} in your area, let us know and we'll be happy to share it, but please <b>do not</b> charge attendees for access to the workshop. 
    & Keep an eye out for {upcoming workshop dates(https://100r.co/pages/press.html#workshops)}
    & Hundredrabbits is open to {hosting workshops(https://twitter.com/hundredrabbits/status/1130118973889163265)}, for travel opportunities contact us at 
    - hundredrabbits at gmail dot com
  Visual
    & You can change the look and colour of Orca. 
    & To do this, {download(https://hundredrabbits.itch.io/orca)} themes. You can view the colour palettes of each theme in the preview, once you find something you like, {*drag the file*}(.svg file) onto Orca. The colours will change instantly. 
    & These themes are part of the {*Ecosystem Theme*}, which means that you can apply a theme to any supported app (Left, Donsol, Pico and Marabu).
    & You can also {create(https://github.com/hundredrabbits/Themes#collection)} your own themes.
  Extras
    & This application supports the {Ecosystem Theme(https://github.com/hundredrabbits/Themes)}. See the {License(https://github.com/hundredrabbits/Orca/blob/master/LICENSE.md)} file for license rights and limitations (MIT). {Pull Requests(https://github.com/hundredrabbits/Orca)} are welcome!
